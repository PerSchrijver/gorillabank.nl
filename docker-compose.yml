version: "3.9"
services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: gorillabank
      POSTGRES_USER: gorilla
      POSTGRES_PASSWORD: banana
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gorilla -d gorillabank"]
      interval: 1s
      timeout: 3s
      retries: 10
      start_period: 1s

  bank_prod:
    build: ./backend
    volumes:
      - ./backend:/app
    container_name: gorilla-bank-prod
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - APP_ENV=production
      - DATABASE_URL=postgresql+psycopg2://gorilla:banana@db:5432/gorillabank
    depends_on:
      db:
        condition: service_healthy  
    ports:
      - "127.0.0.1:5000:5000"
    command: flask --app app run --host 0.0.0.0 --port 5000 --reload

  bank_dev:
    build: ./backend
    volumes:
      - ./backend:/app
    container_name: gorilla-bank-dev
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - APP_ENV=development
      - DATABASE_URL=postgresql+psycopg2://gorilla:banana@db:5432/gorillabank
    depends_on:
      db:
        condition: service_healthy  
    ports:
      - "127.0.0.1:6969:6969"
    command: flask --app app run --host 0.0.0.0 --port 6969 --reload

volumes:
  pgdata:
